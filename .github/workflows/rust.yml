on: push

name: CI

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: actions-rs/toolchain@v1
        with:
            toolchain: nightly
            override: true
      - uses: actions/cache@preview
        id: cache
        with:
          path: target/debug
          key: ${{ runner.os }}-${{ hashFiles('**/Cargo.lock')}}
      - uses: actions-rs/cargo@v1
        with:
          command: test

  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: actions-rs/toolchain@v1
        with:
            toolchain: nightly
            override: true
      - uses: actions/cache@preview
        id: cache
        with:
          path: target/release
          key: ${{ runner.os }}-${{ hashFiles('**/Cargo.lock')}}
      - uses: actions-rs/cargo@v1
        with:
          toolchain: nightly
          command: build
          args: --release --all-features

  build_docker_image:
    name: Build docker image
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Build and publish docker image
        run: ./bin/publish-release ${{ secrets.GITHUB_TOKEN }}

  publish_deployment_artifact:
    name: Publish deployment artifact
    runs-on: ubuntu-latest
    needs: build_docker_image
    steps:
      - uses: actions/checkout@v1
      - name: Write out content for artifact
        run: ./bin/publish-deployment
      - name: Publish artifact
        uses: actions/aws/cli@master
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        with:
          args: s3 cp publish s3://ci.actions/"${GITHUB_SHA}"/publish
      - name: Publish marker
        uses: actions/aws/cli@master
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        with:
          args: s3 cp latest s3://ci.actions/latest

